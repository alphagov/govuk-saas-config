require 'sentry-api'
require 'http'
require 'yaml'

ORG_SLUG = 'govuk' # test account
DEFAULT_TEAM = 'govuk-all'
GOVUK_DOCS_APP_LIST = "https://docs.publishing.service.gov.uk/apps.json"

SentryApi.configure do |config|
  config.endpoint = 'https://sentry.io/api/0'
  config.auth_token = ENV.fetch('SENTRY_AUTH_TOKEN')
  config.default_org_slug = ORG_SLUG
end

def fetch_govuk_apps
  JSON.parse(HTTP.get(GOVUK_DOCS_APP_LIST).body)
end

def team_name(original_slack_name)
  if original_slack_name
    original_slack_name.gsub('#', '') + "-team"
  else
    DEFAULT_TEAM
  end
end

desc "Output the API keys for all apps as hiera"
task :api_keys do
  fetch_govuk_apps.each do |app|
    secret = SentryApi.client_keys("app-#{app["app_name"]}").first.dsn.secret

    puts "govuk::apps::#{app["shortname"]}::sentry_dsn: DEC::GPG[#{secret}]!"
  end
end

desc "Create or update Sentry projects for all GOV.UK applications"
task :update_projects do
  apps = fetch_govuk_apps
  sentry_projects = SentryApi.organization_projects

  puts "There are #{sentry_projects.size} projects in Sentry"
  puts "There are #{apps.size} applications on GOV.UK"

  apps.map {|app| create_or_update_projects(app, sentry_projects) }
end

desc "Create or update Sentry project for a specific GOV.UK application"
task :update_project, %i[project_name] => [] do |_, args|
  project_name = args[:project_name]

  abort("Please provide a project name") if project_name.nil?

  apps = fetch_govuk_apps || []
  sentry_projects = SentryApi.organization_projects
  apps_by_name = apps.select{ |app| app["app_name"] == project_name }

  abort("#{GOVUK_DOCS_APP_LIST} has more than one app called #{project_name}") if apps_by_name.count > 1
  abort(app_not_found_warning(project_name)) if apps_by_name.empty?

  create_or_update_projects(apps_by_name.first, sentry_projects)
end

def app_not_found_warning(project_name)
  <<~WARNING
    The project: #{project_name} is not listed within the GOV.UK docs and so will not be created.
    Troubleshooting:
    - Check the spelling of #{project_name}.
    - Check if it appears in the list of applications at: #{GOVUK_DOCS_APP_LIST}
  WARNING
end

def create_or_update_projects(app, sentry_projects)
  app_name = app.fetch("app_name")
  app_slug = "app-#{app_name}"

  project = sentry_projects.find { |project| project.slug == app_slug }

  if project
    puts "âˆš #{app_name} has a Sentry project (#{project.slug})"
  else
    team_name = team_name(app["team"])
    puts "Creating project #{app_name} (#{app_slug}) for team #{team_name}"
    project = SentryApi.create_project(team_name, name: app_name, slug: app_slug)
    puts "Created project for #{app_name} (#{project.slug})"
  end

  SentryApi.update_project(
    project.slug,
    platform: 'ruby',
    slug: app_slug,
    subjectTemplate: "[${project} @ ${tag:environment}] ${tag:level}: $title (${tag:release})",
  )
end
